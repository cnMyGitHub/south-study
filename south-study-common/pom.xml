<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 南书房学习研究工作室 -->
    <groupId>com.south.study</groupId>
    <artifactId>south-study-common</artifactId>
    <version>0.0.1</version>
    <name>south-study-common</name>
    <description>南书房学习研究工作室</description>
    <packaging>pom</packaging>
    <!-- 模块控制 -->
    <modules>
        <module>south-study-core</module>
        <module>south-study-logger</module>
        <module>south-study-const</module>
        <module>south-study-basedata</module>
        <module>south-study-facade</module>
        <module>south-study-utils</module>
    </modules>
    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>YueJJun</name>
            <email>1530620364@qq.com</email>
            <roles>
                <role>Designer</role>
                <role>Developer</role>
                <role>Architect</role>
            </roles>
            <organization>南书房学习研究工作室-个人开发者</organization>
        </developer>
    </developers>
    <!-- 父版本控制 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.12.RELEASE</version>
        <relativePath/>
    </parent>
    <!-- 版本与变量控制 -->
    <properties>

        <!-- project basic -->
        <java.version>1.8</java.version>
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <maven.compiler.encoding>${encoding}</maven.compiler.encoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- spring -->
        <spring.version>2.2.12.RELEASE</spring.version>
        <spring.security.version>5.6.2</spring.security.version>
        <spring.boot.admin.version>2.2.0</spring.boot.admin.version>
        <spring.cloud.version>Hoxton.SR12</spring.cloud.version>
        <spring.cloud.gateway.version>2.2.6.RELEASE</spring.cloud.gateway.version>
        <spring.cloud.alibaba.version>2.2.0.RELEASE</spring.cloud.alibaba.version>

        <!-- swagger document -->
        <swagger.core>1.5.22</swagger.core>
        <swagger.old.version>2.9.2</swagger.old.version>
        <springfox.version>2.10.5</springfox.version>
        <swagger.xiaoymin.version>1.9.6</swagger.xiaoymin.version>
        <knife4j.version>2.0.8</knife4j.version>

        <!-- tools -->
        <slf4j.version>1.7.30</slf4j.version> <!-- Slf4j日志 -->
        <log4j.core.version>2.17.2</log4j.core.version>
        <aspect.version>1.9.6</aspect.version> <!-- AOP注解 -->
        <alibaba.fastjson.version>1.2.76</alibaba.fastjson.version> <!-- JSON工具 -->
        <jna.windows.dll.version>4.1.0</jna.windows.dll.version> <!-- 访问Windows的DLL -->
        <java.object.loyout.version>0.10</java.object.loyout.version> <!-- 查看Java对象大小 -->
        <hibernate.validator.version>6.0.19.Final</hibernate.validator.version> <!-- Hibernate注解 -->
        <github.pagehelper.version>4.0.0</github.pagehelper.version> <!-- 分页插件 -->
        <java.websocket.version>1.3.8</java.websocket.version> <!-- WebSocket -->
        <socket.client.version>0.6.2</socket.client.version> <!-- Socket IO Client -->
        <socket.netty.version>1.7.7</socket.netty.version> <!-- Socket IO -->
        <yaml.snakeyaml.version>1.23</yaml.snakeyaml.version> <!-- 读取yml文件 -->
        <token.jsonwebtoken.version>0.10.7</token.jsonwebtoken.version> <!-- jwt token -->

        <!-- template -->
        <velocity.engine.core.version>2.1</velocity.engine.core.version>
        <freemarker.version>2.3.30</freemarker.version>
        <!-- tool boxes -->
        <hutool.version>5.7.9</hutool.version>
        <apache.commons.lang3.version>3.9</apache.commons.lang3.version>

        <!-- mybatis -->
        <mybatis.version>3.4.2</mybatis.version>
        <mybatis.spring.boot.version>2.2.2</mybatis.spring.boot.version>
        <mybatis.spring.version>2.0.7</mybatis.spring.version>
        <mybatis.plus.version>3.5.1</mybatis.plus.version>
        <mybatis.plus.generator.version>3.1.1</mybatis.plus.generator.version>

        <!-- monitor -->
        <prometheus.version>1.1.3</prometheus.version>
        <micro.meter.version>1.3.16</micro.meter.version>

        <!-- database -->
        <mysql.version>8.0.20</mysql.version>
        <sql-server.version>7.0.0.jre8</sql-server.version>
        <oracle.version>11.2.0.3</oracle.version>
        <sqlite.version>3.27.2.1</sqlite.version>
        <postgre-sql.version>${postgresql.version}</postgre-sql.version>
        <redis.version>${spring.version}</redis.version>
        <mongodb.version>${spring.version}</mongodb.version>

        <!-- database pool -->
        <druid.version>1.1.23</druid.version> <!-- Druid数据库连接池 -->
        <commons.pool.version>2.6.2</commons.pool.version> <!-- Redis连接池 -->
        <zaxxer.hikari-cp.version>3.3.1</zaxxer.hikari-cp.version>

        <!-- more dependency -->
        <seata.version>1.4.2</seata.version> <!-- 分布式事务 -->
    </properties>
    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 项目内部依赖 -->
            <dependency>
                <groupId>com.light.ultraman</groupId>
                <artifactId>ultraman-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.light.ultraman</groupId>
                <artifactId>ultraman-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- hu 工具包 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- lang3 工具包 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>

            <!-- JSON 处理 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba.fastjson.version}</version>
            </dependency>

            <!-- slf4j 统一版本 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <optional>true</optional>
                <scope>compile</scope>
            </dependency>

            <!-- log4j -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <!-- 如果需要引入 log4j，禁止使用低于 2.17.1 以下的版本 （严重漏洞） -->
                <version>${log4j.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <!-- 严禁使用 29.0-jre 以下版本 -->
                <version>31.1-jre</version>
            </dependency>

            <!-- spring security -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- spring boot actuator -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- spring boot admin-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring.boot.admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud services -->
            <dependency>
                <groupId>io.pivotal.spring.cloud</groupId>
                <artifactId>spring-cloud-services-dependencies</artifactId>
                <version>3.3.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- hibernate -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>

            <!-- swagger 集成 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.core}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.core}</version>
            </dependency>

            <!--<dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.old.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.old.version}</version>
            </dependency>-->

            <!-- 开发文档 UI 优化 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-models</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- swagger ui 样式优化 旧版本 -->
                <!-- 文档： https://doc.xiaominfo.com/ -->
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger.xiaoymin.version}</version>
            </dependency>
            <dependency>
                <!-- swagger ui 样式优化 新版本 -->
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-ui</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <!-- Spring Cloud 微服务架构 -->
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <!-- 在网关聚合文档服务下,可以再把前端的ui资源引入 -->
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- mybatis 集成 -->
            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>
            <!-- mybatis plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <!-- mybatis-plus-generator -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>3.3.2</version>
            </dependency>

            <!-- 分页插件依赖 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${github.pagehelper.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- 生成代码模板工具 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.engine.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>




            <!-- 数据库 集成 (不含连接池) -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${sql-server.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${redis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial</groupId>
                <artifactId>sqlite-jdbc</artifactId>
                <version>${sqlite.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgre-sql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- druid 数据库连接池 -->
            <dependency>
                <!--
                    1. 监控数据库访问性能
                    2. 替换传统连接池中间件
                    3. 数据库密码加密
                    4. SQL 执行日志
                    5. 扩展 JDBC
                -->
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- redis-连接池 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons.pool.version}</version>
            </dependency>
            <!-- 数据库连接池-->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${zaxxer.hikari-cp.version}</version>
            </dependency>

            <!-- 访问Window的dll -->
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.windows.dll.version}</version>
            </dependency>

            <dependency>
                <!-- 分析对象在JVM的大小和分布 -->
                <!-- 查看对象内部信息：ClassLayout.parseInstance(obj).toPrintable() -->
                <!-- 查看对象外部信息(包括引用对象)：GraphLayout.parseInstance(obj).toPrintable() -->
                <!-- 查看对象占用空间总大小：GraphLayout.parseInstance(obj).totalSize() -->
                <!-- 依赖地址：https://mvnrepository.com/artifact/org.openjdk.jol/jol-core -->
                <!-- 官方地址：http://openjdk.java.net/projects/code-tools/jol/ -->
                <groupId>org.openjdk.jol</groupId>
                <artifactId>jol-core</artifactId>
                <version>${java.object.loyout.version}</version>
            </dependency>

            <!--RabbitMQ的依赖-->
            <!--<dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>5.6.0</version>
            </dependency>-->

            <!-- websocket -->
            <dependency>
                <groupId>org.java-websocket</groupId>
                <artifactId>Java-WebSocket</artifactId>
                <version>${java.websocket.version}</version>
            </dependency>
            <!-- socketIo client -->
            <dependency>
                <groupId>io.socket</groupId>
                <artifactId>socket.io-client</artifactId>
                <version>${socket.client.version}</version>
            </dependency>
            <!-- socketIo -->
            <dependency>
                <groupId>com.corundumstudio.socketio</groupId>
                <artifactId>netty-socketio</artifactId>
                <version>${socket.netty.version}</version>
            </dependency>

            <!--读取yml文件-->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${yaml.snakeyaml.version}</version>
            </dependency>

            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.1</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${token.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${token.jsonwebtoken.version}</version>
            </dependency>

            <!-- Sentinel -->
            <!--<dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
            </dependency>-->
            <!-- Sentinel持久化配置 -->
            <!--<dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
            </dependency>-->

            <!-- nacos-client -->
            <!--<dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>1.2.1</version>
            </dependency>-->
            <!-- nacos注册中心 -->
            <!--<dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            </dependency>-->
            <!-- nacos配置中心 -->
            <!--<dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
            </dependency>-->
            <!-- openfeign -->
            <!--<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
            </dependency>-->

            <!--<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>2.2.0-beta2</version>
            </dependency>-->

            <!--监控sql日志-->
            <!--<dependency>
                <groupId>org.bgee.log4jdbc-log4j2</groupId>
                <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
                <version>1.16</version>
            </dependency>-->

            <!-- seata 分布式事务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-start-alibaba-seata</artifactId>
                <version>${seata.version}</version>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
            </dependency>
            <!-- 整合dubbo -->
            <!--            <dependency>-->
            <!--                <groupId>io.dubbo.springboot</groupId>-->
            <!--                <artifactId>spring-boot-starter-dubbo</artifactId>-->
            <!--                <version>1.0.0</version>-->
            <!--            </dependency>-->
            <!-- zookeeper客户端 -->
            <!--            <dependency>-->
            <!--                <groupId>com.101tec</groupId>-->
            <!--                <artifactId>zkclient</artifactId>-->
            <!--                <version>0.7</version>-->
            <!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

</project>
